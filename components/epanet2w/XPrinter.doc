{\rtf1\ansi\deff0\deflang1033{\fonttbl {\f0\fswiss\fprq2 Verdana;}{\f1\fmodern\fprq1 Courier New;}}
{\colortbl ;\red0\green0\blue255;\red0\green0\blue0;}
\uc1\pard\cf1\ulnone\b\f0\fs32 TPRINTCONTROL\par
\cf2\b0\fs22\par
Version 1.0\par
By Lewis Rossman\par
Email: rossman.lewis@epa.gov\par
\par
\par
TPrintControl is a component for Delphi 3.0 and higher that that contains various functions for printing text, tables, and graphics. It includes a print preview feature and the ability to add headers, footers, and page numbering. Printing is accomplished via a two-stage process:\par
\par
\pard\fi-360\li360\tx360 1.\tab Following a call to the BeginJob procedure, printing commands are rendered on a series of metafiles, one for each printed page.\par
\pard\par
\pard\fi-360\li360\tx360 2.\tab Following a call of the EndJob procedure the metafiles are automatically played back through Delphi's TPrinter object or are displayed one page at a time on a Preview form.\par
\pard\par
\par
\cf1\b\fs28 INSTALLATION\par
\cf2\b0\fs22\par
\pard\fi-360\li360\tx360 1.\tab Unzip the PrintControl file to a folder, then start Delphi.\par
\par
2.\tab Click \b Component | Install \b0 from the main menu.\par
\par
3.\tab Click the Add button and locate the Xprinter.pas file. Then click OK.\par
\pard\par
The TPrintControl component will be installed on the Extensions page of Delphi's component palette.\par
\par
\par
\cf1\b\fs28 USING TPRINTCONTROL\par
\cf2\b0\fs22\par
TPrintControl is a non-visual component. After dropping it on a form, you call its various methods in your source code to position and display text and pictures on the printed page. The component itself contains only a Name and Tag property. An example of using TPrintControl to print the contents of a TMemo control might look as follows:\par
\par
\f1 Procedure PrintMemo(aMemo: TMemo);\par
Var\par
  I: Integer;\par
Begin\par
  With PrintControl1 do\par
  Begin\par
    BeginJob;\par
    SetMargins(1.5,1.0,1.5,1.5);\par
    SetFontInformation('Courier New',12,[]);\par
    SetAutoPaging(True);\par
    SetDestination(dPrinter);\par
    With aMemo do\par
      For I := 0 to Lines.Count-1 do PrintLine(Lines[I]);\par
    EndJob;\par
  End;\par
End;\par
\f0\par
\par
\cf1\b\fs28 OVERVIEW OF TPRINTCONTROL's METHODS\par
\cf2\b0\fs22\par
What follows is a listing of TPrintControl's methods organized by function. A complete description of each function is provided in the next section.\par
\par
\par
\ul Job Control Methods\par
\ulnone\par
\pard\li360 BeginJob\tab\tab\tab starts a new printing job\tab\par
EndJob\tab\tab\tab ends the current job and prints or previews the pages\tab\par
NewPage\tab\tab\tab begins a new page\tab\par
\pard\par
\par
\ul Appearance Methods\ulnone\par
\par
\pard\fi-3240\li3600 SetMargins\tab sets page margins\tab\par
SetFontInformation\tab selects a new font to print with\tab\par
SaveCurrentFont\tab saves the current font\tab\par
RestoreCurrentFont\tab restores the last font saved\tab\par
\pard\par
\par
\ul Positioning Methods\par
\ulnone\par
\pard\fi-2520\li2880 SetTab\tab sets a tab spacing\tab\par
GetLinesPerPage\tab gets number of lines per page\tab\par
GetPageHeight\tab gets page height\tab\par
GetPageWidth\tab gets page width\tab\par
GetXPos\tab gets current horizontal position on page\tab\par
GoToXPos\tab moves to specified horizontal position on page\tab\par
GetYPos\tab gets current vertical position on page\tab\par
GoToYPos\tab moves to specified vertical position on page\tab\par
GoToXY\tab moves to specified point on the page\tab\par
GoToPageTop\tab moves to the top of the page\tab\par
GetLinesLeft\tab gets number of lines left below current position\tab\par
GetLinesInDetailArea\par
\tab\tab gets number of lines within vertical margins\tab\par
NextLine\tab moves down one line\tab\par
NewLines\tab moves down specified number of lines\tab\par
IsPageEnd\tab determines if at end of the page\tab\par
\pard\par
\par
\ul Text Printing Methods\par
\ulnone\par
\pard\fi-2520\li2880 Print\tab prints text string starting at current position\tab\par
PrintLine\tab prints text string and moves to next line\tab\par
PrintLeft\tab prints text string starting at left margin\tab\par
PrintCenter\tab prints text string centered between left/right margins\tab\par
PrintRight\tab prints text string ending at right margin\tab\par
\pard\par
\par
\ul Table Printing Methods\par
\ulnone\par
\pard\fi-3240\li3600 CreateTable\tab creates a table with specified number of columns\tab\par
SetTableStyle\tab sets style for grid lines\tab\par
SetTableHeaderStyle\tab sets the style (font, etc.) for column headings\tab\par
SetColumnDimensions\tab sets position and width of specified column\tab\par
SetColumnHeaderText\tab sets text for specified column heading\tab\par
SetColumnHeaderAlignment\par
\tab\tab sets alignment for column heading text\tab\par
BeginTable\tab begins filling cells of table starting at first row\par
PrintColumnLeft\tab prints left-aligned text in specified column\tab\par
PrintColumnRight\tab prints right-aligned text in specified column \tab\par
PrintColumnCenter\tab prints centered text in specified column\tab\par
DrawColumnGridLine\tab draws gridline or box at specified column\tab\par
NextTableRow\tab moves to next row of table\tab\par
EndTable\tab ends printing to the table\tab\par
\pard\par
\par
\ul Shape Printing Methods\par
\ulnone\par
\pard\fi-2520\li2880 DrawLine\tab prints a line between two points\tab\par
DrawBox\tab prints a box around a rectangular region\tab\par
DrawBoxShaded\tab prints a shaded box around a rectangular region\tab\par
\pard\par
\par
\ul Picture Printing Methods\par
\ulnone\par
\pard\fi-2520\li2880 DrawGraphic\tab prints a TPicture object at current position on page\tab\par
PositionGraphic\tab prints a TPicture object with specified alignment\tab\par
StretchGraphic\tab prints a TPicture object to fill a rectangular region\tab\par
StretchChart\tab prints a TChart object to fill a rectangular region\tab\par
\pard\par
\par
\ul Header/Footer Methods\par
\ulnone\par
\pard\fi-3240\li3600 SetHeaderInformation\tab Sets position, font and text for header\tab\par
SetHeaderDimensions\tab Sets dimensions of header\tab\par
SetFooterInformation\tab Sets position, font and text for footer\tab\par
SetFooterDimensions\tab Sets dimensions of footer\tab\par
SetPageNumberInformation\par
\tab\tab Sets position, font and text for page numbers\tab\par
\pard\par
\par
\ul Option Setting Methods\par
\ulnone\par
\pard\fi-2520\li2880 SetAutoPaging\tab determines if pages are automaticlly added as needed\tab\par
SetDestination\tab sends print job to printer or to preview form \tab\par
SetOrientation\tab sets page orientation to portrait or landscape\tab\par
SetTitle\tab supplies a title for the print job\tab\par
SetHeaders\tab determines if page headers are displayed\tab\par
SetFooters\tab determines if page footers are displayed\tab\par
SetPageNumbers\tab determines if page numebrs are displayed\tab\par
SetShowProgress\tab determines if printing progress message is displayed\tab\par
\pard\par
\par
\cf1\fs28 Complete List of Methods\par
\cf2\fs22\par
\par
\b procedure BeginJob;\par
\b0\par
Call this procedure first when creating a print job. After finishing all printing commands, call \i EndJob \i0 to send the job to the printer or to the preview form.\par
\par
\par
\b procedure BeginTable;\par
\b0\par
Call this procedure to begin printing the contents of a table, after having created the table with the \i CreateTable \i0 procedure and formating it with the other table-related procedures. Any column heading labels defined with \i SetColumnHeader \i0 will automatically be printed. Make calls to the \i PrintColumnXXX \i0 procedures to print values in each column of the table, row by row. Use the \i NextTableRow \i0 procedure to move to the next row of the table. Call \i EndTable \i0 when you are done printing the table.\par
\par
\par
\b procedure CreateTable(Columns: Word);\par
\b0\par
Creates a table containing \i Columns \i0 number of columns. Call this procedure before calling any of the methods used to format or print to the table. The default layout extends the table across the entire page between the margins with each column the same size. Use the \i SetColumnDimensions \i0 procedure to customize the table's dimensions.\par
\par
\pard\fi-1440\li1440 Example:\tab The example below shows how to print or preview the contents of a StringGrid as a table.\par
\pard\par
\f1 procedure PrintGrid(aPrintControl: TPrintControl; \par
aGrid: TStringGrid; Dest: TDestination);\par
\{-------------------------------------------------\par
  Prints StringGrid aGrid to destination Dest\par
  using PrintControl aPrintControl.\par
--------------------------------------------------\}\par
var\par
   i, j, startrow, endrow: Integer;\par
\par
begin\par
   with aPrintControl do\par
   begin\par
\par
   \{Begin a new print job\}\par
      BeginJob;\par
      SetFontInformation('Arial', 10, []);\par
\par
   \{Create a table with borders and grid lines\}   \par
      CreateTable(aGrid.ColCount);\par
      SetTableStyle([sBorder, sVerticalGrid, sHorizontalGrid]);\par
\par
   \{Make the grid's fixed rows be the column headings\}\par
      SetTableHeaderStyle('Arial', 10, [fsBold], True, 225);\par
      for i := 0 to aGrid.FixedRows-1 do\par
      begin\par
         for j := 0 to aGrid.ColCount-1 do\par
            SetColumnHeaderText(j+1, i+1, aGrid.Cells[j,i]);\par
      end;\par
\par
   \{Begin printing the cells of the table\}\par
      BeginTable;\par
      startrow := aGrid.FixedRows;\par
      endrow := aGrid.RowCount - 1;\par
\par
   \{Process each non-fixed row of the grid\}\par
      for i := startrow to endrow do\par
      begin\par
\par
      \{Print the grid cell contents for each column\}\par
         for j := 0 to aGrid.ColCount-1 do\par
            PrintColumnLeft(j+1, aGrid.Cells[j,i]);\par
\par
      \{Move to the next row position in the printed table\}\par
         NextTableRow( (i = endrow) );\par
      end;\par
\par
   \{End printing the table,\par
    set the job's destination and end it\}\par
      EndTable;\par
      SetDestination(Dest);\par
      EndJob;\par
   end;\par
end;\par
\f0\par
\par
\pard\fi-360\li360\b procedure DrawBox(Xtop, Ytop, Xbottom, Ybottom: Single; LineWidth: Word);\par
\pard\b0\par
Draws a box with border thickness LineWidth bounding the area between positions (\i Xtop\i0 ,\i Ytop\i0 ) and (\i Xbottom\i0 , \i Ybottom\i0 ) as measured in inches from the top-left corner of the page.\par
\par
\par
\pard\fi-360\li360\b procedure DrawBoxShaded(Xtop, Ytop, Xbottom, Ybottom: Single; LineWidth: Word; Shading: Word);\par
\pard\b0\par
Draws a shaded box with border thickness \i LineWidth \i0 bounding the area between positions (\i Xtop\i0 ,\i Ytop\i0 ) and (\i Xbottom\i0 , \i Ybottom\i0 ) as measured in inches from the top-left corner of the page. \i Shading \i0 is a number between 0 and 255 indicating the degree of shading used; use 0 for black and 255 for white (no shading).\par
\par
\par
\pard\fi-360\li360\b procedure DrawColumnGridLine(ColumnNumber: Word; Style: TableStyle; LineWidth: Word);\par
\pard\b0\par
Use this procedure to draw a grid line or box for the cell in a table at column \i ColumnNumber \i0 in the current row. Set \i Style \i0 to \i sVerticalGrid \i0 to draw a vertical gridline on the left side of the cell, to \i sHorizontalGrid \i0 to draw a horizontal gridline on the bottom of the cell, or to \i sBorder \i0 to draw a box around the cell. Use this procedure to control how and where gridlines are drawn as each row of the table is printed. Use the \i SetTableStyle \i0 procedure prior to the start of printing the table to add gridlines automatically.\par
\par
\par
\b procedure DrawGraphic(aPicture: TPicture);\par
\b0\par
Draws the TPicture object \i aPicture \i0 on the page with its upper-left corner corresponding to the current X,Y position.\par
\par
\par
\pard\fi-360\li360\b procedure DrawLine(Xtop, Ytop, Xbottom, Ybottom: Single; LineWidth: Word);\par
\pard\b0\par
Draws a line of thickness \i LineWidth \i0 from position (\i Xtop\i0 , \i Ytop\i0 ) to (\i Xbottom\i0 , \i Ybottom\i0 ), measured in inches from the top left corner of the page. \par
\par
\par
\b procedure EndJob;\par
\b0\par
Call this procedure to end the creation of a print job and send it to the printer or to the preview form.\par
\par
\par
\b procedure EndTable;\par
\b0\par
Call this procedure to end the printing of a table. \par
\par
\par
\b function GetLinesinDetailArea: Word;\par
\b0\par
Returns the number of lines of text that will fit between the top and bottom page margins.\par
\par
\par
\b function GetLinesLeft: Word;\par
\b0\par
Returns the number of lines remaining on the page until the bottom margin is reached.\par
\par
\par
\b function GetLinesPerPage: Integer;\par
\b0\par
Returns the number of lines of text that will fit on the entire area of a page (including the space reserved for margins).\par
\par
\par
\b function GetPageHeight: Single;\par
\b0\par
Returns the total height of the page in inches.\par
\par
\par
\b function GetPageWidth: Single;\par
\b0\par
Returns the total width of the page in inches.\par
\par
\par
\b function GetXPos: Single;\par
\b0\par
Returns the current distance from the left edge of the page in inches.\par
\par
\par
\b function GetYPos: Single;\par
\b0\par
Returns the current distance from the top edge of the page in inches.\par
\par
\par
\b procedure GoToPageTop;\par
\b0\par
Moves to the top of the detail area of the page, just below the top margin.\par
\par
\par
\b procedure GoToXPos(Xposition: Single);\par
\b0\par
Moves to position Xposition inches from the left edge of the page.\par
\par
\par
\b procedure GoToXYPos(XPosition, YPosition: Single);\par
\b0\par
Moves to \i XPosition \i0 inches from left edge of page and \i YPosition \i0 inches from top edge of page.\par
\par
\par
\b procedure GoToYPos(Yposition: Single);\par
\b0\par
Moves to position \i Yposition \i0 inches from the top edge of the page.\par
\par
\par
\b function IsPageEnd: Boolean;\par
\b0\par
Returns True if no more lines of text will fit within the margins on the current page.\par
\par
\par
\b procedure NewLines(Number: Word);\par
\b0\par
Generates \i Number \i0 of new lines, moving to a new page if required if \i AutoPaging \i0 is enabled (see \i SetAutoPaging\i0 ).\par
\par
\par
\b function NewPage: Integer;\par
\b0\par
Adds a new page to the print job and moves to the top of its detail (printing) area. Returns the new total number of pages in the print job.\par
\par
\par
\b procedure NextLine;\par
\b0\par
Moves to the next line on the page. If you are currently at the bottom margin of the page and \i AutoPaging \i0 is enabled (see \i SetAutoPaging\i0 ) then a new page will be created and the current position will be at the top margin.\par
\par
\par
\b procedure NextTableRow(IsLastRow: Boolean);\par
\b0\par
Moves the current Y position on the printed page to the next row of a table. If this position is below the page's bottom margin then a new page will be created providing that \i IsLastRow \i0 is false. Set \i IsLastRow \i0 to True if the current row is the last row of the table, and to False otherwise.\par
\par
\par
\b procedure PositionGraphic(Alignment: TJustify; aPicture: TPicture);\par
\b0\par
Draws the TPicture object \i aPicture \i0 on the page starting from the current Y position and aligned horizontally according to the value of \i Alignment \i0 (\i jLeft \i0 = left-justified at the left margin, \i jRight \i0 = right-justified at the right margin, and \i jCenter \i0 = centered between the left and right margins).\par
\par
\par
\b procedure Print(Text: String);\par
\b0\par
Prints the string \i Text \i0 starting at the current position on the page.\par
\par
\par
\b procedure PrintCenter(Text: String);\par
\b0\par
Prints the string \i Text \i0 centered between the left and right margins of the page at the current Y position.\par
\par
\par
\b procedure PrintColumnLeft(ColumnNumber: Word; Text: String);\par
\b0\par
Prints the string \i Text \i0 aligned left in table column \i ColumnNumber\i0 .\par
\par
\par
\b procedure PrintColumnRight(ColumnNumber: Word; Text: String);\par
\b0\par
Prints the string \i Text \i0 aligned right in table column \i ColumnNumber\i0 .\par
\par
\par
\b procedure PrintColumnCenter(ColumnNumber: Word; Text: String);\par
\b0\par
Prints the string \i Text \i0 centered in table column \i ColumnNumber\i0 .\par
\par
\par
\b procedure PrintLeft(Text: String);\par
\b0\par
Prints the string \i Text \i0 starting at the left margin of the current Y position on the page.\par
\par
\par
\b procedure PrintLine(Text: String);\par
\b0\par
Prints the string \i Text \i0 starting from the left margin of the current Y position on the page and then moves down one line. If currently at the bottom margin of the page, a new page will be created if \i AutoPaging \i0 is enabled (see \i SetAutoPaging\i0 ).\par
\par
\par
\b procedure PrintRight(Text: String);\par
\b0\par
Prints the string \i Text \i0 right-justified to the right margin of the page at the current Y position.\par
\par
\par
\b procedure RestoreCurrentFont;\par
\b0\par
Restores the current font to that saved with \i SaveCurrentFont\i0 .\par
\par
\par
\b procedure SaveCurrentFont;\par
\b0\par
Saves the current font information.\par
\par
\par
\b procedure SetAutoPaging(Value: Boolean);\par
\b0\par
Turns on \i AutoPaging \i0 if \i Value \i0 is True. This will automatically create a new page whenever a call to \i PrintLine\i0 , \i NextLine\i0 , or \i NewLines \i0 moves the current Y position beyond the bottom margin of the current page. The default value is True.\par
\par
\par
\pard\fi-360\li360\b procedure SetColumnDimensions(ColumnNumber: Word; XPosition: Single;Length: Single);\par
\pard\b0\par
Specifies that column \i ColumnNumber \i0 in a table should begin \i XPosition \i0 inches from the left edge of the page and have width of \i Length \i0 inches.\par
\par
\par
\pard\fi-360\li360\b procedure SetColumnHeaderAlignment(ColumnNumber: Word;Alignment: TJustify);\par
\pard\b0\par
Specifies how the label for column \i ColumnNumber \i0 in a table should be aligned. Set \i Alignment \i0 to \i jLeft \i0 to align left, \i jRight \i0 to align right, and \i jCenter \i0 to center. The default alignment is centered.\par
\par
\par
\pard\fi-360\li360\b procedure SetColumnHeaderText(ColumnNumber: Word; Line: Word; Text: String);\par
\pard\b0\par
Specifies that the string \i Text \i0 should be used to label column \i ColumnNumber \i0 in a table. Line specifies the line number (from 1 to 5) on which the test appears in the label  Use the \i SetTableHeaderStyle \i0 and \i SetColumnHeaderAlignment \i0 procedures to format the column label.\par
\par
Example: These calls make the label in column 2 consist of two lines of text:\par
\par
\f1\tab SetColumnHeaderText(2, 1, 'Heading1');\par
\tab SetColumnHeaderText(2, 2, 'Heading2');\par
\f0\par
\par
\b procedure SetDestination(Value: TDestination);\par
\b0\par
Determines the print job's destination. Set \i Value \i0 to \i dPrinter \i0 to send it to the printer or \i dPreview \i0 to send it to the Preview form. The default is \i dPreview\i0 .\par
\par
\par
\pard\fi-360\li360\b procedure SetFontInformation(Name: String; Size: Word; Style: TFontStyle);\par
\pard\b0\par
Sets the current font to type \i Name \i0 with point size \i Size \i0 and style \i Style\i0 . For example, SetFontInformation('Arial', 12, [fsBold]).\par
\par
\par
\pard\fi-360\li360\b  procedure SetFooterDimensions(Xtop, Ytop, Xbottom, Ybottom: Single;LineWidth: Word; Shading: Word);\par
\pard\b0\par
Defines a shaded box to be drawn around the footer placed on each page. See \i DrawShadedBox \i0 for the definitions of the parameters.\par
\par
\par
\pard\fi-360\li360\b procedure SetFooterInformation(Line: Integer; YPosition: Single; Text: String;Alignment: TJustify; FontName: String; FontSize: Word; FontStyle: TFontStyle);\par
\pard\b0\par
Defines a footer line to appear on each printed page:\par
\pard\li360\i Line\i0 :\tab\tab line number (footers can have up to 5 lines)\par
\i YPosition\i0 :\tab distance from top of page in inches\par
\i Text\i0 :\tab\tab text to appear in the footer line\par
\i Alignment\i0 :\tab jLeft for left-justified at the left page margin,\par
\tab\tab\tab jRight for right-justified at the right page margin,\par
\tab\tab\tab or jCenter to be centered between the margins\par
\i FontName\i0 :\tab name of the font to use for the footer line\par
\i FontSize\i0 :\tab\tab point size of the font used for the footer line\par
\i FontStyle\i0 :\tab set of font styles used for the footer line\par
\tab\tab\tab (use [] for normal style)\par
\pard The \i SetFooters \i0 procedure determines if footers are printed or not.\par
\par
\par
\pard\fi-360\li360\b procedure SetHeaderDimensions(Xtop, Ytop, Xbottom, Ybottom: Single;LineWidth: Word; Shading: Word);\par
\pard\b0\par
Defines a shaded box to be drawn around the header placed on each page. See \i DrawShadedBox \i0 for the definitions of the parameters.\par
\par
\par
\b procedure SetFooters(Value: Boolean);\par
\b0\par
Determines if page footers (defined by the \i SetFooterInformation \i0 procedure) are printed (\i Value \i0 = True). The default is False.\par
\par
\par
\pard\fi-360\li360\b procedure SetHeaderInformation(Line: Integer; YPosition: Single; Text: String;Alignment: TJustify; FontName: String; FontSize: Word; FontStyle: TFontStyle);\par
\pard\b0\par
Defines a header line to appear on each printed page:\par
\pard\li360\i Line\i0 :\tab\tab line number (headers can have up to 5 lines)\par
\i YPosition\i0 :\tab distance from top of page in inches\par
\i Text\i0 :\tab\tab text to appear in the header line\par
\i Alignment\i0 :\tab jLeft for left-justified at the left page margin,\par
\tab\tab\tab jRight for right-justified at the right page margin,\par
\tab\tab\tab or jCenter to be centered between the margins\par
\i FontName\i0 :\tab name of the font to use for the header line\par
\i FontSize\i0 :\tab\tab point size of the font used for the header line\par
\i FontStyle\i0 :\tab set of font styles used for the header line\par
\tab\tab\tab (use [] for normal style)\par
\pard The \i SetHeaders \i0 procedure determines if headers are printed or not.\par
\par
\par
\b procedure SetHeaders(Value: Boolean);\par
\b0\par
Determines if page headers (defined by the \i SetHeaderInformation \i0 procedure) are printed (\i Value \i0 = True). The default is False.\par
\par
\par
\b procedure SetMargins(Top, Bottom, Left, Right: Single);\par
\b0\par
Sets page margins to values given by \i Top, Bottom, Left, and Right \i0 (in inches).\par
\par
\par
\b procedure SetOrientation(Value: TPrinterOrientation);\par
\b0\par
Determines the orientation of the printed page. Set \i Value \i0 to \i poPortrait \i0 for portrait orientation or \i poLandscape \i0 for landscape orientation. The default value is \i poPortrait\i0 .\par
\par
\par
\pard\fi-360\li360\b procedure SetPageNumberInformation(YPosition: Single; Text: String;Alignment: TJustify; FontName: String; FontSize: Word; FontStyle: TFontStyle);\par
\pard\b0\par
Defines how page numbers will appear on each printed page:\par
\pard\li360\i YPosition\i0 :\tab distance from top of page in inches\par
\i Text\i0 :\tab\tab text to appear before the page number\par
\i Alignment\i0 :\tab jLeft for left-justified at the left page margin,\par
\tab\tab\tab jRight for right-justified at the right page margin,\par
\tab\tab\tab or jCenter to be centered between the margins\par
\i FontName\i0 :\tab name of the font to use for the page number\par
\i FontSize\i0 :\tab\tab point size of the font used for the page number\par
\i FontStyle\i0 :\tab set of font styles used for the page number\par
\tab\tab\tab (use [] for normal style)\par
\pard The \i SetPageNumbers \i0 procedure determines if page numbers are printed or not.\par
\par
\par
\b procedure SetPageNumbers(Value: Boolean);\par
\b0\par
Determines if page numbers (defined by the \i SetPageNumberInformation \i0 procedure) are printed (\i Value \i0 = True). The default is False.\par
\par
\par
\b procedure SetShowProgress(Value: Boolean);\par
\b0\par
Determines if a progress message is displayed showing which page of the print job is currently being printed, along with a Cancel button that can be used to cancel the print job (\i Value \i0 = True). The default is True.\par
\par
\par
\b procedure SetTab(Inches: Single);\par
\b0\par
Changes the width of the current tab spacing in effect to \i Inches \i0 (in inches).\par
\par
\par
\pard\fi-360\li360\b procedure SetTableHeaderStyle(FontName: String; FontSize: Word; FontStyle:TFontStyles; Boxed: Boolean; Shading: Word);\par
\pard\b0\par
Specifies the style used to label the columns in a table. The arguments represent:\par
\pard\li360\i FontName\i0 :\tab name of the font used for the label\par
\i FontSize\i0 :\tab\tab point size of the font used for the label\par
\i FontStyle\i0 :\tab set of font styles used for the label\par
\tab\tab\tab (use [] for normal style)\par
\i Boxed\i0 :\tab\tab use True if the column label should have a box drawn around it\par
\i Shading\i0 :\tab\tab a number between 0 and 255 indicating the degree of \par
\tab\tab\tab shading used when drawing a box around the label;\par
\tab\tab\tab 255 indicates no shading.\par
\pard\par
Example: \f1 SetTableHeaderStyle('Arial', 12, [fsBold], True, 225);\par
\f0\par
\par
\b procedure SetTableStyle(Value: TTableStyle);\par
\b0\par
Speficies use of border and gridlines for table. Value is a set that can contain any combination of the following elements:\par
\pard\li360\i sBorder\i0\tab\tab\tab draws a border around the table\par
\i sVerticalGrid\i0\tab\tab draws vertical gridlines between columns\par
\i sHorizontalGrid\i0\tab\tab draws horizontal gridlines between rows\par
\pard The default table style is no border and no gridlines.\par
\par
Example: \f1 SetTableStyle([sBorder, sHorizontalGrid]);\f0\par
\par
\par
\b procedure SetTitle(Value: String);\par
\b0\par
Value assigns a title to the print job that identifies it to the Windows Print Manager.\par
\par
\par
\pard\fi-360\li360\b procedure StretchChart(Xtop, Ytop, Xbottom, Ybottom: Single; aChart: TChart);\par
\pard\b0\par
Draws the TChart object aChart stretched to fit within the rectangle defined by (\i Xtop, Ytop\i0 ) and (\i Xbottom, Ybottom\i0 ) as measured in inches from the top-left corner of the page.\par
\par
\par
\pard\fi-360\li360\b procedure StretchGraphic(Xtop, Ytop, Xbottom, Ybottom: Single;aPicture: TPicture);\par
\pard\b0\par
Draws the TPicture object \i aPicture \i0 stretched to fit within the rectangle defined by (\i Xtop, Ytop\i0 ) and (\i Xbottom, Ybottom\i0 ) as measured in inches from the top-left corner of the page.\par
\par
\par
}
 